import Config

# Configure your database - uses DATABASE_URL from environment
# Development now uses cloud database (no local PostgreSQL)
config :fn_notifications, FnNotifications.Repo,
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10
  # Note: Database URL is configured in runtime.exs from DATABASE_URL environment variable

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
config :fn_notifications, FnNotificationsWeb.Endpoint,
  # Bind to all interfaces to allow access from Docker host
  http: [ip: {0, 0, 0, 0}, port: String.to_integer(System.get_env("PORT") || "4000")],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "UzgzoVMoLyxV9UM9IKtfNvZAmU+53CE/q69O4BTD4Amid2jwgvJnCtlUpkiVQhvT",
  # Asset watchers for LiveView frontend
  watchers: [
    tailwind: {Tailwind, :install_and_run, [:default, ~w(--watch)]},
    esbuild: {Esbuild, :install_and_run, [:default, ~w(--sourcemap=inline --watch)]}
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :fn_notifications, FnNotificationsWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/fn_notifications_web/(controllers|live|components)/.*(ex|heex)$"
    ]
  ]

# Enable dev routes for dashboard and mailbox
config :fn_notifications, dev_routes: true

# Do not include metadata nor timestamps in development logs
config :logger, :default_formatter, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

# Testing and logging configuration for notifications
config :fn_notifications,
  # Enable test mode for SMS/WhatsApp adapters (prevents actual API calls)
  test_mode: System.get_env("TEST_MODE", "true") == "true",
  # Enable detailed logging for external service calls
  log_twilio_requests: System.get_env("LOG_TWILIO_REQUESTS", "true") == "true"

config :phoenix_live_view,
  # Include debug annotations and locations in rendered markup.
  # Changing this configuration will require mix clean and a full recompile.
  debug_heex_annotations: true,
  debug_attributes: true,
  # Enable helpful, but potentially expensive runtime checks
  enable_expensive_runtime_checks: true

# Configure Swoosh based on TEST_MODE environment variable
# This configuration is evaluated at compile time, but uses runtime environment

# Default to Local adapter for safety (test mode)
config :fn_notifications, FnNotifications.Mailer, adapter: Swoosh.Adapters.Local

# Default to disabled API client
config :swoosh, :api_client, false

# Note: Real SMTP configuration will be set in runtime.exs when TEST_MODE=false
